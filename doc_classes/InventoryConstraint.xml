<?xml version="1.0" encoding="UTF-8" ?>
<class name="InventoryConstraint" inherits="Resource" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/godotengine/godot/master/doc/class.xsd">
	<brief_description>
		Script that can be extended to define add rules for [Inventory] behaviors.
	</brief_description>
	<description>
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="_can_add_new_stack_on_inventory" qualifiers="virtual">
			<return type="bool" />
			<param index="0" name="inventory" type="Node" />
			<param index="1" name="item_id" type="String" />
			<param index="2" name="amount" type="int" />
			<param index="3" name="properties" type="Dictionary" />
			<description>
				This function can be extended to define whether or not the inventory accepts the creation of a stack.
				Returns `true` the inventory can create new stack with [param item_id].
				Returns `false` the inventory cannot add new stack with [param item_id].
				[codeblocks]
				[gdscript]
				# Example of stack limit in Inventory
				func _can_add_new_stack_on_inventory(inventory: Node, item_id: String, amount: int, properties: Dictionary) -&gt; bool:
					return inventory.stacks.count -&lt; 2
				[/gdscript]
				[/codeblocks]
			</description>
		</method>
		<method name="_can_add_on_inventory" qualifiers="virtual">
			<return type="bool" />
			<param index="0" name="inventory" type="Node" />
			<param index="1" name="item_id" type="String" />
			<param index="2" name="amount" type="int" />
			<param index="3" name="properties" type="Dictionary" />
			<description>
				This function can be extended to limit when an item can be added (regardless of whether it is adding a new stack or not).
				Useful when you want the inventory to accept only one item or one category of item.
				Returns `true` the inventory can add [param item_id].
				Returns `false` the inventory cannot add [param item_id].
				[codeblocks]
				[gdscript]
				# Example of limiting the item to be added to the inventory
				func _can_add_on_inventory(inventory: Node, item_id: String, amount: int, properties: Dictionary) -&gt; bool:
					return item_id == "wood"
				[/gdscript]
				[/codeblocks]
			</description>
		</method>
		<method name="_get_amount_to_add" qualifiers="virtual">
			<return type="int" />
			<param index="0" name="inventory" type="Node" />
			<param index="1" name="item_id" type="String" />
			<param index="2" name="amount" type="int" />
			<param index="3" name="properties" type="Dictionary" />
			<description>
				This function can be implemented to override the quantity that should be added to each inventory add interaction.
				Useful when you want to limit the quantity that the inventory receives, for example an inventory linked to a processor and receives one item at a time, or does not receive anything if it is processing something.
				Returns `int` with amount of [param item_id] added in inventory.
				[codeblocks]
				[gdscript]
				# Example of limiting the amount of items to be added to the inventory
				var processing: bool
				func _get_amount_to_add(inventory: Node, item_id: String, amount: int, properties: Dictionary) -&gt; int:
				if processing:
					return 0
				else: 
					return 1
				[/gdscript]
				[/codeblocks]
			</description>
		</method>
		<method name="_get_max_stack" qualifiers="virtual">
			<return type="int" />
			<param index="0" name="inventory" type="Node" />
			<param index="1" name="item_id" type="String" />
			<param index="2" name="amount" type="int" />
			<param index="3" name="properties" type="Dictionary" />
			<param index="4" name="actual_max_stack" type="int" />
			<description>
				This function can be extended to override the max stack behavior of your inventory, very useful for creating inventories that do not respect the max stack number of items, 
				for example an inventory of only wood where the max stack is higher than the max stack defined for the wood itself.
				Returns `int` with max_stack of [param item_id] added.
				[codeblocks]
				[gdscript]
				# Example of limiting the amount of items to be added to the inventory
				var processing: bool
				func _get_amount_to_add(inventory: Node, item_id: String, amount: int, properties: Dictionary) -&gt; int:
				if processing:
					return 0
				else: 
					return 1
				[/gdscript]
				[/codeblocks]
			</description>
		</method>
	</methods>
</class>
